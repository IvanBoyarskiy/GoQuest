package com.kime.goquest;

import android.annotation.SuppressLint;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;

public class Lesson1 extends AppCompatActivity {

    private Button buttonBack;
    private ScrollView scrollView;
    private TextView textViewContent;
    private int currentLessonNumber;

    @SuppressLint("MissingInflatedId")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_lesson1);

        currentLessonNumber = getIntent().getIntExtra("lesson_number", -1);
        buttonBack = findViewById(R.id.buttonBackToMain);
        scrollView = findViewById(R.id.scrollView);
        textViewContent = findViewById(R.id.textLessonContent);

        switch (currentLessonNumber){
            case 1:
                String lessonText = buildLesson1Text();
                textViewContent.setText(lessonText);
                break;
            case 2:
                String lesson2Text = buildLesson2Text();
                textViewContent.setText(lesson2Text);
                break;
            case 3:
                String lesson3Text = buildLesson3Text();
                textViewContent.setText(lesson3Text);
                break;
            case 4:
                String lesson4Text = buildLesson4Text();
                textViewContent.setText(lesson4Text);
                break;
            case 5:
                String lesson5Text = buildLesson5Text();
                textViewContent.setText(lesson5Text);
                break;

        }



        buttonBack.setOnClickListener(v -> finish());
    }

    private String buildLesson1Text() {
        StringBuilder sb = new StringBuilder();

        sb.append("üìò –£—Ä–æ–∫ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —è–∑—ã–∫–∞ Go\n\n");

        sb.append("### –ß—Ç–æ —Ç–∞–∫–æ–µ Go?\n");
        sb.append("Go (–∏–ª–∏ Golang) ‚Äî —ç—Ç–æ —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç Google, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è:\n\n");
        sb.append("- –í—ã—Å–æ–∫–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏\n");
        sb.append("- –ü—Ä–æ—Å—Ç–æ—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è\n");
        sb.append("- –ü–æ–¥–¥–µ—Ä–∂–∫–∏ –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç–∏\n");
        sb.append("- –†–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤\n\n");

        sb.append("Go –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—â–µ–π –ª–æ–≥–∏–∫–∏, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ Android —á–µ—Ä–µ–∑ gomobile.\n\n");

        sb.append("### –®–∞–≥ 1: –°–∫–∞—á–∞–π—Ç–µ Go\n");
        sb.append("–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç:\n");
        sb.append("üëâ https://go.dev/dl/\n\n");

        sb.append("–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä—Å–∏—é, –ø–æ–¥—Ö–æ–¥—è—â—É—é –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ:\n");
        sb.append("- Windows ‚Üí go1.xx.x.windows-amd64.msi\n");
        sb.append("- macOS ‚Üí go1.xx.x.darwin-amd64.pkg\n");
        sb.append("- Linux ‚Üí go1.xx.x.linux-amd64.tar.gz\n\n");

        sb.append("–®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Go\n\n");

        sb.append("#### –î–ª—è Windows\n");
        sb.append("–ó–∞–ø—É—Å—Ç–∏—Ç–µ .msi –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.\n");
        sb.append("–ü—É—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫–∏: C:\\Program Files\\Go\n\n");

        sb.append("#### –î–ª—è macOS\n");
        sb.append("–û—Ç–∫—Ä–æ–π—Ç–µ .pkg –∏ —Å–ª–µ–¥—É–π—Ç–µ —É–∫–∞–∑–∞–Ω–∏—è–º.\n");
        sb.append("Go –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤: /usr/local/go\n\n");

        sb.append("#### –î–ª—è Linux\n");
        sb.append("–†–∞—Å–ø–∞–∫—É–π—Ç–µ –∞—Ä—Ö–∏–≤:\n");
        sb.append("sudo tar -C /usr/local -xzf go1.xx.x.linux-amd64.tar.gz\n\n");

        sb.append("–î–æ–±–∞–≤—å—Ç–µ –≤ PATH:\n");
        sb.append("export PATH=$PATH:/usr/local/go/bin\n\n");

        sb.append("–ü—Ä–∏–º–µ–Ω–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:\n");
        sb.append("source ~/.bashrc\n\n");

        sb.append("–®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É\n\n");

        sb.append("–û—Ç–∫—Ä–æ–π—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:\n");
        sb.append("go version\n\n");

        sb.append("–î–æ–ª–∂–µ–Ω –ø–æ—è–≤–∏—Ç—å—Å—è –≤—ã–≤–æ–¥ –≤—Ä–æ–¥–µ:\n");
        sb.append("go version go1.22.5 windows/amd64\n\n");

        sb.append("–ï—Å–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç ‚Äî –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É.\n\n");

        sb.append("–®–∞–≥ 4: –°–æ–∑–¥–∞–π—Ç–µ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ\n\n");

        sb.append("–°–æ–∑–¥–∞–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞:\n");
        sb.append("mkdir -p ~/go/src/hello\n\n");

        sb.append("–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª hello.go:\n");
        sb.append("package main\n");
        sb.append("import \"fmt\"\n");
        sb.append("func main() {\n");
        sb.append("    fmt.Println(\"–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!\")\n");
        sb.append("}\n\n");

        sb.append("–ó–∞–ø—É—Å—Ç–∏—Ç–µ –µ–≥–æ:\n");
        sb.append("go run hello.go\n\n");

        sb.append("–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n");
        sb.append("–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!\n\n");

        sb.append("–®–∞–≥ 6: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–¥–∞\n\n");

        sb.append("–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ IDE:\n");
        sb.append("- Visual Studio Code (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π, –ª–µ–≥–∫–∏–π)\n");
        sb.append("- GoLand (JetBrains, –ø–æ–ª–Ω–∞—è IDE)\n");
        sb.append("- LiteIDE (–º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è —Å—Ä–µ–¥–∞)\n\n");



        return sb.toString();
    }
    private String buildLesson2Text() {
        StringBuilder sb = new StringBuilder();

        sb.append("–£—Ä–æ–∫ 2: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö\n");
        sb.append("\n");

        // –í–≤–µ–¥–µ–Ω–∏–µ
        sb.append("Go ‚Äî —ç—Ç–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ —Ç–∏–ø –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –∏ –Ω–µ –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å—Å—è.\n");
        sb.append("–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ‚Äî —ç—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.\n");
        sb.append("\n");

        // –û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        sb.append("### –û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö\n");
        sb.append("\n");

        sb.append("–°—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤ –æ–±—ä—è–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é:\n");
        sb.append("\n");

        sb.append("1. –ü–æ–ª–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ var:\n");
        sb.append("\n");

        sb.append("var age int = 25\n");
        sb.append("var name string = \"–ê–ª–µ–∫—Å–∞–Ω–¥—Ä\"\n");
        sb.append("var isStudent bool = true\n");
        sb.append("\n");

        sb.append("–ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Ç–∏–ø —è–≤–Ω–æ –∏–ª–∏ –æ–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ, –µ—Å–ª–∏ –æ–Ω —è—Å–µ–Ω –∏–∑ –∑–Ω–∞—á–µ–Ω–∏—è:\n");
        sb.append("\n");

        sb.append("var height = 1.78 // —Ç–∏–ø float64 –±—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª—ë–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n");
        sb.append("\n");

        sb.append("2. –ö–æ—Ä–æ—Ç–∫–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ (:=):\n");
        sb.append("\n");

        sb.append("func main() {\n");
        sb.append("    name := \"–ò–≤–∞–Ω\"\n");
        sb.append("    age := 30\n");
        sb.append("    fmt.Println(name, age)\n");
        sb.append("}\n");
        sb.append("\n");

        sb.append("–≠—Ç–æ—Ç —Å–ø–æ—Å–æ–± —É–¥–æ–±–µ–Ω –∏ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è.\n");
        sb.append("–ù–æ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–π!\n");
        sb.append("\n");

        sb.append("3. –ì—Ä—É–ø–ø–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ var ()\n");
        sb.append("\n");

        sb.append("var (\n");
        sb.append("    x = 10\n");
        sb.append("    y = \"–ü—Ä–∏–≤–µ—Ç\"\n");
        sb.append("    z = 3.14\n");
        sb.append(")\n");
        sb.append("\n");

        sb.append("–¢–∞–∫ —É–¥–æ–±–Ω–æ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–¥–Ω–æ–≥–æ –±–ª–æ–∫–∞.\n");
        sb.append("\n");

        // –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
        sb.append("### –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã\n");
        sb.append("\n");

        sb.append("–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã ‚Äî —ç—Ç–æ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è. –û–Ω–∏ –∑–∞–¥–∞—é—Ç—Å—è –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º const:\n");
        sb.append("\n");

        sb.append("const Pi = 3.14\n");
        sb.append("const (\n");
        sb.append("    StatusOK = 200\n");
        sb.append("    StatusError = 500\n");
        sb.append(")\n");
        sb.append("\n");

        sb.append("–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å –ø–æ—Å–ª–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.\n");
        sb.append("\n");

        // –ë–∞–∑–æ–≤—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
        sb.append("### –ë–∞–∑–æ–≤—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö\n");
        sb.append("\n");

        sb.append("#### –ß–∏—Å–ª–∞\n");
        sb.append("\n");

        sb.append("- int ‚Äî —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã: 32 –∏–ª–∏ 64 –±–∏—Ç–∞)\n");
        sb.append("- uint ‚Äî –±–µ–∑–∑–Ω–∞–∫–æ–≤–æ–µ —Ü–µ–ª–æ–µ\n");
        sb.append("- byte ‚Äî –ø—Å–µ–≤–¥–æ–Ω–∏–º –¥–ª—è uint8 (—á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Ä–∞–±–æ—Ç–µ —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏)\n");
        sb.append("- float64 ‚Äî –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ —Å –¥–≤–æ–π–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é\n");
        sb.append("- complex128 ‚Äî –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —á–∏—Å–ª–æ\n");
        sb.append("\n");

        sb.append("#### –°—Ç—Ä–æ–∫–∏\n");
        sb.append("\n");

        sb.append("–°—Ç—Ä–æ–∫–∏ –≤ Go –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –∫–æ–¥–∏—Ä–æ–≤–∫—É UTF-8:\n");
        sb.append("\n");

        sb.append("message := \"–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!\"\n");
        sb.append("emptyString := \"\" // –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞\n");
        sb.append("\n");

        sb.append("–°—Ç—Ä–æ–∫–∏ –º–æ–∂–Ω–æ –∫–æ–Ω–∫–∞—Ç–µ–Ω–∏—Ä–æ–≤–∞—Ç—å:\n");
        sb.append("\n");

        sb.append("greeting := \"–ü—Ä–∏–≤–µ—Ç, \" + \"—Å—Ç—É–¥–µ–Ω—Ç!\"\n");
        sb.append("\n");

        sb.append("#### –õ–æ–≥–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è\n");
        sb.append("\n");

        sb.append("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–∏–ø–∞ bool –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ç–æ–ª—å–∫–æ –¥–≤–∞ –∑–Ω–∞—á–µ–Ω–∏—è: true –∏–ª–∏ false\n");
        sb.append("\n");

        sb.append("isReady := true\n");
        sb.append("hasErrors := false\n");
        sb.append("\n");

        // –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
        sb.append("### –í–∞–∂–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏\n");
        sb.append("\n");

        sb.append("1. Go –∑–∞–ø—Ä–µ—â–∞–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ\n");
        sb.append("2. –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è, –∏–Ω–∞—á–µ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä –≤—ã–¥–∞—Å—Ç –æ—à–∏–±–∫—É\n");
        sb.append("3. –ü–æ—Å–ª–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Ç–∏–ø –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –ù–ï –º–µ–Ω—è–µ—Ç—Å—è\n");
        sb.append("\n");

        // –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã
        sb.append("### –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏\n");
        sb.append("\n");

        sb.append("package main\n");
        sb.append("import \"fmt\"\n");
        sb.append("\n");
        sb.append("func main() {\n");
        sb.append("    // –û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ\n");
        sb.append("    name := \"–û–ª–µ–≥\"\n");
        sb.append("    age := 22\n");
        sb.append("    gpa := 4.5\n");
        sb.append("    isActive := true\n");
        sb.append("\n");
        sb.append("    // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n");
        sb.append("    fmt.Printf(\"–ò–º—è: %s\\n\", name)\n");
        sb.append("    fmt.Printf(\"–í–æ–∑—Ä–∞—Å—Ç: %d\\n\", age)\n");
        sb.append("    fmt.Printf(\"–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª: %.2f\\n\", gpa)\n");
        sb.append("    fmt.Printf(\"–ê–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: %t\\n\", isActive)\n");
        sb.append("}\n");
        sb.append("\n");

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è
        sb.append("### –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è\n");
        sb.append("\n");

        sb.append("1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ camelCase –¥–ª—è –∏–º—ë–Ω –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö\n");
        sb.append("2. –ò–∑–±–µ–≥–∞–π—Ç–µ –æ–¥–Ω–æ–±—É–∫–≤–µ–Ω–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π, –∫—Ä–æ–º–µ —Å—á—ë—Ç—á–∏–∫–æ–≤ —Ü–∏–∫–ª–æ–≤\n");
        sb.append("3. –î–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ sync.Mutex –∏–ª–∏ channels\n");
        sb.append("4. –ü–∞–∫–µ—Ç reflect –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ç–∏–ø–∞–º–∏ –Ω–∞ —É—Ä–æ–≤–Ω–µ —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏\n");
        sb.append("\n");




        return sb.toString();
    }
    private String buildLesson3Text() {
        StringBuilder sb = new StringBuilder();

        sb.append("–£—Ä–æ–∫ 3: –§—É–Ω–∫—Ü–∏–∏\n\n");
        sb.append("–§—É–Ω–∫—Ü–∏—è ‚Äî —ç—Ç–æ –±–ª–æ–∫ –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –∏–∑ —Ä–∞–∑–Ω—ã—Ö —á–∞—Å—Ç–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã.\n");
        sb.append("–í Go —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—ä—è–≤–ª—è—é—Ç—Å—è –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º func.\n\n");

        sb.append("–ü—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏:\n\n");

        sb.append("func greet() {\n");
        sb.append("    fmt.Println(\"–ü—Ä–∏–≤–µ—Ç!\")\n");
        sb.append("}\n\n");

        sb.append("func main() {\n");
        sb.append("    greet()\n");
        sb.append("}\n\n");

        sb.append("–í—ã–∑–æ–≤–µ—Ç –≤—ã–≤–æ–¥:\n");
        sb.append("–ü—Ä–∏–≤–µ—Ç!\n\n");

        sb.append("### –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ—É–Ω–∫—Ü–∏–π\n");
        sb.append("–§—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n");

        sb.append("func add(a int, b int) {\n");
        sb.append("    fmt.Printf(\"–°—É–º–º–∞ %d + %d = %d\\n\", a, b, a + b)\n");
        sb.append("}\n\n");

        sb.append("func main() {\n");
        sb.append("    add(2, 3)\n");
        sb.append("    add(10, -5)\n");
        sb.append("}\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç:\n");
        sb.append("–°—É–º–º–∞ 2 + 3 = 5\n");
        sb.append("–°—É–º–º–∞ 10 + -5 = 5\n\n");

        sb.append("–ï—Å–ª–∏ —Ç–∏–ø—ã –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ, –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∏—Ö –æ–¥–∏–Ω —Ä–∞–∑:\n\n");

        sb.append("func multiply(a, b int) {\n");
        sb.append("    fmt.Printf(\"%d * %d = %d\\n\", a, b, a*b)\n");
        sb.append("}\n\n");

        sb.append("### –í–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è\n");
        sb.append("–§—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã:\n\n");

        sb.append("func sum(a, b int) int {\n");
        sb.append("    return a + b\n");
        sb.append("}\n\n");

        sb.append("func main() {\n");
        sb.append("    total := sum(5, 7)\n");
        sb.append("    fmt.Println(\"–ò—Ç–æ–≥–æ:\", total)\n");
        sb.append("}\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç:\n");
        sb.append("–ò—Ç–æ–≥–æ: 12\n\n");

        sb.append("–ú–æ–∂–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π:\n\n");

        sb.append("func divide(a, b float64) (float64, bool) {\n");
        sb.append("    if b == 0 {\n");
        sb.append("        return 0, false\n");
        sb.append("    }\n");
        sb.append("    return a / b, true\n");
        sb.append("}\n\n");

        sb.append("func main() {\n");
        sb.append("    result, ok := divide(10, 0)\n");
        sb.append("    if ok {\n");
        sb.append("        fmt.Println(\"–†–µ–∑—É–ª—å—Ç–∞—Ç:\", result)\n");
        sb.append("    } else {\n");
        sb.append("        fmt.Println(\"–û—à–∏–±–∫–∞: –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å\")\n");
        sb.append("    }\n");
        sb.append("}\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç:\n");
        sb.append("–û—à–∏–±–∫–∞: –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å\n\n");

        sb.append("### –ò–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è\n");
        sb.append("Go –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–∞–≤–∞—Ç—å –∏–º–µ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º:\n\n");

        sb.append("func calculate(a, b int) (sum int, product int) {\n");
        sb.append("    sum = a + b\n");
        sb.append("    product = a * b\n");
        sb.append("    return\n");
        sb.append("}\n\n");

        sb.append("func main() {\n");
        sb.append("    s, p := calculate(3, 4)\n");
        sb.append("    fmt.Println(\"–°—É–º–º–∞:\", s)\n");
        sb.append("    fmt.Println(\"–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ:\", p)\n");
        sb.append("}\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç:\n");
        sb.append("–°—É–º–º–∞: 7\n");
        sb.append("–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ: 12\n\n");

        sb.append("### –ê–Ω–æ–Ω–∏–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∑–∞–º—ã–∫–∞–Ω–∏—è\n");
        sb.append("–í Go –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Ö –∫–∞–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:\n\n");

        sb.append("func main() {\n");
        sb.append("    square := func(x int) int {\n");
        sb.append("        return x * x\n");
        sb.append("    }\n\n");
        sb.append("    fmt.Println(\"–ö–≤–∞–¥—Ä–∞—Ç —á–∏—Å–ª–∞ 5:\", square(5))\n");
        sb.append("}\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç:\n");
        sb.append("–ö–≤–∞–¥—Ä–∞—Ç —á–∏—Å–ª–∞ 5: 25\n\n");

        sb.append("### –ü–µ—Ä–µ–º–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ (Variadic functions)\n");
        sb.append("–ú–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ `...`:\n\n");

        sb.append("func printNumbers(numbers ...int) {\n");
        sb.append("    for _, n := range numbers {\n");
        sb.append("        fmt.Println(n)\n");
        sb.append("    }\n");
        sb.append("}\n\n");

        sb.append("func main() {\n");
        sb.append("    printNumbers(1, 2, 3)\n");
        sb.append("    printNumbers(10, 20)\n");
        sb.append("}\n\n");

        sb.append("–í—ã–≤–æ–¥:\n");
        sb.append("1\n");
        sb.append("2\n");
        sb.append("3\n");
        sb.append("10\n");
        sb.append("20\n\n");

        sb.append("### –ì–æ—Ä—É—Ç–∏–Ω—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏\n");
        sb.append("–§—É–Ω–∫—Ü–∏–∏ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥–æ—Ä—É—Ç–∏–Ω–∞–º–∏:\n\n");

        sb.append("func worker(id int) {\n");
        sb.append("    fmt.Println(\"–†–∞–±–æ—Ç–Ω–∏–∫\", id, \"–Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É\")\n");
        sb.append("}\n\n");

        sb.append("func main() {\n");
        sb.append("    for i := 1; i <= 3; i++ {\n");
        sb.append("        go worker(i)\n");
        sb.append("    }\n\n");
        sb.append("    var input string\n");
        sb.append("    fmt.Scanln(&input)\n");
        sb.append("}\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç (–ø—Ä–∏–º–µ—Ä–Ω—ã–π):\n");
        sb.append("–†–∞–±–æ—Ç–Ω–∏–∫ 1 –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É\n");
        sb.append("–†–∞–±–æ—Ç–Ω–∏–∫ 2 –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É\n");
        sb.append("–†–∞–±–æ—Ç–Ω–∏–∫ 3 –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É\n\n");

        sb.append("### –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã\n");
        sb.append("- –§—É–Ω–∫—Ü–∏–∏ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω—ã (–Ω–µ—Ç overloading)\n");
        sb.append("- –õ—É—á—à–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –Ω–µ –±–æ–ª–µ–µ 2‚Äì3 –∑–Ω–∞—á–µ–Ω–∏–π\n");
        sb.append("- –î–ª—è –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–æ—Ä—É—Ç–∏–Ω—ã (`go func(){ ... }()`)\n");
        sb.append("- –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –±–æ–ª—å—à–∞—è ‚Äî –≤—ã–Ω–µ—Å–∏—Ç–µ –µ—ë –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª –∏–ª–∏ –ø–∞–∫–µ—Ç\n\n");


        return sb.toString();
    }
    private String buildLesson4Text() {
        StringBuilder sb = new StringBuilder();

        sb.append("–£—Ä–æ–∫ 4: –£—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n\n");
        sb.append("–í Go –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–æ–≥–∏–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã:\n");
        sb.append("- if / else\n");
        sb.append("- switch\n");
        sb.append("- —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–µ —É—Å–ª–æ–≤–∏—è (—á–µ—Ä–µ–∑ if)\n\n");

        sb.append("#### –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ:\n");
        sb.append("–í—Å–µ —É—Å–ª–æ–≤–∏—è –¥–æ–ª–∂–Ω—ã –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–∏–ø–∞ bool\n\n");

        sb.append("### if / else\n");
        sb.append("–°–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å–ª–æ–≤–∏–µ:\n\n");

        sb.append("func main() {\n");
        sb.append("    age := 18\n\n");
        sb.append("    if age >= 18 {\n");
        sb.append("        fmt.Println(\"–í—ã —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–π\")\n");
        sb.append("    } else {\n");
        sb.append("        fmt.Println(\"–í—ã –Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–π\")\n");
        sb.append("    }\n");
        sb.append("}\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç:\n");
        sb.append("–í—ã —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–π\n\n");

        sb.append("–ú–æ–∂–Ω–æ –æ–±—ä—è–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤–Ω—É—Ç—Ä–∏ if:\n\n");

        sb.append("if x := 42; x > 0 {\n");
        sb.append("    fmt.Println(\"–ß–∏—Å–ª–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ\")\n");
        sb.append("}\n\n");

        sb.append("### else if\n");
        sb.append("–ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–æ–∫:\n\n");

        sb.append("func checkNumber(n int) {\n");
        sb.append("    if n > 0 {\n");
        sb.append("        fmt.Println(n, \"‚Äî –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ\")\n");
        sb.append("    } else if n < 0 {\n");
        sb.append("        fmt.Println(n, \"‚Äî –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ\")\n");
        sb.append("    } else {\n");
        sb.append("        fmt.Println(\"–≠—Ç–æ –Ω–æ–ª—å\")\n");
        sb.append("    }\n");
        sb.append("}\n\n");

        sb.append("func main() {\n");
        sb.append("    checkNumber(10)\n");
        sb.append("    checkNumber(-5)\n");
        sb.append("    checkNumber(0)\n");
        sb.append("}\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç:\n");
        sb.append("10 ‚Äî –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ\n");
        sb.append("-5 ‚Äî –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ\n");
        sb.append("–≠—Ç–æ –Ω–æ–ª—å\n\n");

        sb.append("### switch\n");
        sb.append("–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–º–µ—Å—Ç–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ else if.\n");
        sb.append("Go –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ case –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.\n\n");

        sb.append("func checkDay(day string) {\n");
        sb.append("    switch day {\n");
        sb.append("    case \"–ø–Ω\":\n");
        sb.append("        fmt.Println(\"–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ ‚Äî –Ω–∞—á–∞–ª–æ –Ω–µ–¥–µ–ª–∏\")\n");
        sb.append("    case \"–≤—Ç\":\n");
        sb.append("        fmt.Println(\"–í—Ç–æ—Ä–Ω–∏–∫ ‚Äî –¥–µ–Ω—å —Ä–∞–±–æ—Ç—ã\")\n");
        sb.append("    case \"—Å—Ä\", \"—á—Ç\":\n");
        sb.append("        fmt.Println(\"–°—Ä–µ–¥–∞ –∏–ª–∏ —á–µ—Ç–≤–µ—Ä–≥ ‚Äî —Å–µ—Ä–µ–¥–∏–Ω–∞ –Ω–µ–¥–µ–ª–∏\")\n");
        sb.append("    default:\n");
        sb.append("        fmt.Println(\"–î—Ä—É–≥–æ–π –¥–µ–Ω—å\")\n");
        sb.append("    }\n");
        sb.append("}\n\n");

        sb.append("func main() {\n");
        sb.append("    checkDay(\"–ø–Ω\")\n");
        sb.append("    checkDay(\"—á—Ç\")\n");
        sb.append("    checkDay(\"–≤—Å\")\n");
        sb.append("}\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç:\n");
        sb.append("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ ‚Äî –Ω–∞—á–∞–ª–æ –Ω–µ–¥–µ–ª–∏\n");
        sb.append("–°—Ä–µ–¥–∞ –∏–ª–∏ —á–µ—Ç–≤–µ—Ä–≥ ‚Äî —Å–µ—Ä–µ–¥–∏–Ω–∞ –Ω–µ–¥–µ–ª–∏\n");
        sb.append("–î—Ä—É–≥–æ–π –¥–µ–Ω—å\n\n");

        sb.append("–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å switch –±–µ–∑ —É—Å–ª–æ–≤–∏—è:\n\n");

        sb.append("func evaluateScore(score int) {\n");
        sb.append("    switch {\n");
        sb.append("    case score >= 90:\n");
        sb.append("        fmt.Println(\"–û—Ü–µ–Ω–∫–∞: A\")\n");
        sb.append("    case score >= 80:\n");
        sb.append("        fmt.Println(\"–û—Ü–µ–Ω–∫–∞: B\")\n");
        sb.append("    case score >= 70:\n");
        sb.append("        fmt.Println(\"–û—Ü–µ–Ω–∫–∞: C\")\n");
        sb.append("    default:\n");
        sb.append("        fmt.Println(\"–ù–µ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ\")\n");
        sb.append("    }\n");
        sb.append("}\n\n");

        sb.append("func main() {\n");
        sb.append("    evaluateScore(95)\n");
        sb.append("    evaluateScore(85)\n");
        sb.append("    evaluateScore(70)\n");
        sb.append("    evaluateScore(50)\n");
        sb.append("}\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç:\n");
        sb.append("–û—Ü–µ–Ω–∫–∞: A\n");
        sb.append("–û—Ü–µ–Ω–∫–∞: B\n");
        sb.append("–û—Ü–µ–Ω–∫–∞: C\n");
        sb.append("–ù–µ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ\n\n");

        sb.append("### –õ–æ–≥–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã\n");
        sb.append("Go –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã:\n\n");

        sb.append("&& ‚Äî –ò (and)\n");
        sb.append("|| ‚Äî –ò–õ–ò (or)\n");
        sb.append("! ‚Äî –ù–ï (not)\n\n");

        sb.append("–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n\n");

        sb.append("age := 20\n");
        sb.append("if age >= 18 && age <= 25 {\n");
        sb.append("    fmt.Println(\"–ú–æ–ª–æ–¥—ë–∂–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç\")\n");
        sb.append("} else if age > 25 || age < 18 {\n");
        sb.append("    fmt.Println(\"–í–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞\")\n");
        sb.append("}\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç:\n");
        sb.append("–ú–æ–ª–æ–¥—ë–∂–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç\n\n");

        sb.append("### –¢–µ—Ä–Ω–∞—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è\n");
        sb.append("Go –Ω–µ –∏–º–µ–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Ä–Ω–∞—Ä–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞, –Ω–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å if –∫–æ—Ä–æ—Ç–∫–æ:\n\n");

        sb.append("isAdult := \"–Ω–µ—Ç\"\n");
        sb.append("if age >= 18 {\n");
        sb.append("    isAdult = \"–¥–∞\"\n");
        sb.append("}\n");
        sb.append("fmt.Printf(\"%s\\n\", isAdult)\n\n");

        sb.append("### –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π\n");
        sb.append("–í Go –º–æ–∂–Ω–æ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å —á–∏—Å–ª–∞, —Å—Ç—Ä–æ–∫–∏, –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∏ –¥—Ä—É–≥–∏–µ —Ç–∏–ø—ã:\n\n");

        sb.append("a := 5\n");
        sb.append("b := 10\n");
        sb.append("if a > b {\n");
        sb.append("    fmt.Println(\"a –±–æ–ª—å—à–µ b\")\n");
        sb.append("} else if a < b {\n");
        sb.append("    fmt.Println(\"a –º–µ–Ω—å—à–µ b\")\n");
        sb.append("} else {\n");
        sb.append("    fmt.Println(\"a —Ä–∞–≤–Ω–æ b\")\n");
        sb.append("}\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç:\n");
        sb.append("a –º–µ–Ω—å—à–µ b\n\n");

        sb.append("### nil –∏ –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è\n");
        sb.append("–£—Å–ª–æ–≤–∏—è —Ç–∞–∫–∂–µ —Ä–∞–±–æ—Ç–∞—é—Ç —Å —É–∫–∞–∑–∞—Ç–µ–ª—è–º–∏ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏:\n\n");

        sb.append("var user *User = nil\n");
        sb.append("if user == nil {\n");
        sb.append("    fmt.Println(\"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω\")\n");
        sb.append("}\n\n");

        sb.append("var data []int = nil\n");
        sb.append("if data == nil {\n");
        sb.append("    fmt.Println(\"–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç–æ–π\")\n");
        sb.append("}\n\n");

        sb.append("### –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã\n");
        sb.append("- –í Go –Ω–µ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ ?: (—Ç–µ—Ä–Ω–∞—Ä–Ω–æ–≥–æ), –Ω–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å if\n");
        sb.append("- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ switch, –µ—Å–ª–∏ –º–Ω–æ–≥–æ —É—Å–ª–æ–≤–∏–π\n");
        sb.append("- –ò–∑–±–µ–≥–∞–π—Ç–µ –≥–ª—É–±–æ–∫–æ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö if ‚Äî —ç—Ç–æ —É—Å–ª–æ–∂–Ω—è–µ—Ç —á—Ç–µ–Ω–∏–µ –∫–æ–¥–∞\n");
        sb.append("- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–æ—Ä—É—Ç–∏–Ω—ã –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–ª–æ–∂–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π\n");
        sb.append("- –î–ª—è –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —É—Å–ª–æ–≤–∏–π —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\n\n");


        return sb.toString();
    }
    private String buildLesson5Text() {
        StringBuilder sb = new StringBuilder();

        sb.append("–£—Ä–æ–∫ 5: –¶–∏–∫–ª—ã\n\n");
        sb.append("Go –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–∏–ø —Ü–∏–∫–ª–∞ ‚Äî for.\n");
        sb.append("–≠—Ç–æ –¥–µ–ª–∞–µ—Ç —è–∑—ã–∫ –ø—Ä–æ—Å—Ç—ã–º –∏ –ª–∞–∫–æ–Ω–∏—á–Ω—ã–º.\n\n");

        // –ë–∞–∑–æ–≤—ã–π for
        sb.append("#### –ü—Ä–æ—Å—Ç–æ–π —Ü–∏–∫–ª for\n");
        sb.append("–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ü–∏–∫–ª –≤ Go:\n\n");

        sb.append("for i := 0; i < 5; i++ {\n");
        sb.append("    fmt.Println(\"–ò—Ç–µ—Ä–∞—Ü–∏—è\", i)\n");
        sb.append("}\n\n");

        sb.append("–í—ã–≤–æ–¥:\n");
        sb.append("–ò—Ç–µ—Ä–∞—Ü–∏—è 0\n");
        sb.append("–ò—Ç–µ—Ä–∞—Ü–∏—è 1\n");
        sb.append("–ò—Ç–µ—Ä–∞—Ü–∏—è 2\n");
        sb.append("–ò—Ç–µ—Ä–∞—Ü–∏—è 3\n");
        sb.append("–ò—Ç–µ—Ä–∞—Ü–∏—è 4\n\n");

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ —Ü–∏–∫–ª–∞
        sb.append("#### –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–Ω–µ —Ü–∏–∫–ª–∞\n");
        sb.append("–ú–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏–∑ —É—Å–ª–æ–≤–∏—è —Ü–∏–∫–ª–∞:\n\n");

        sb.append("i := 1\n");
        sb.append("for ; i <= 5; i++ {\n");
        sb.append("    fmt.Println(i)\n");
        sb.append("}\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç:\n");
        sb.append("1\n");
        sb.append("2\n");
        sb.append("3\n");
        sb.append("4\n");
        sb.append("5\n\n");

        // –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
        sb.append("#### –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª\n");
        sb.append("Go –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ —Ü–∏–∫–ª—ã:\n\n");

        sb.append("for {\n");
        sb.append("    fmt.Println(\"–ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª\")\n");
        sb.append("}\n\n");

        sb.append("–ß—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ –Ω–µ–≥–æ, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å break:\n\n");

        sb.append("count := 0\n");
        sb.append("for {\n");
        sb.append("    fmt.Println(\"–ü–æ–ø—ã—Ç–∫–∞\", count)\n");
        sb.append("    count++\n");
        sb.append("    if count >= 3 {\n");
        sb.append("        break\n");
        sb.append("    }\n");
        sb.append("}\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç:\n");
        sb.append("–ü–æ–ø—ã—Ç–∫–∞ 0\n");
        sb.append("–ü–æ–ø—ã—Ç–∫–∞ 1\n");
        sb.append("–ü–æ–ø—ã—Ç–∫–∞ 2\n\n");

        // –£—Å–ª–æ–≤–∏–µ –±–µ–∑ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        sb.append("#### –¢–æ–ª—å–∫–æ —É—Å–ª–æ–≤–∏–µ (–±–µ–∑ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏)\n");
        sb.append("–ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ —É—Å–ª–æ–≤–∏–µ:\n\n");

        sb.append("i := 0\n");
        sb.append("for i < 5 {\n");
        sb.append("    fmt.Println(i)\n");
        sb.append("    i++\n");
        sb.append("}\n\n");

        sb.append("–†–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ while –≤ –¥—Ä—É–≥–∏—Ö —è–∑—ã–∫–∞—Ö.\n\n");

        // range –¥–ª—è –º–∞—Å—Å–∏–≤–æ–≤ –∏ —Å—Ç—Ä–æ–∫
        sb.append("#### –¶–∏–∫–ª for —Å range\n");
        sb.append("Go –∏—Å–ø–æ–ª—å–∑—É–µ—Ç `range` –¥–ª—è –∏—Ç–µ—Ä–∞—Ü–∏–∏ –ø–æ —Å–ø–∏—Å–∫–∞–º, –º–∞—Å—Å–∏–≤–∞–º, —Å—Ç—Ä–æ–∫–∞–º –∏ –∫–∞–Ω–∞–ª–∞–º:\n\n");

        sb.append("numbers := []int{1, 2, 3, 4, 5}\n");
        sb.append("for index, value := range numbers {\n");
        sb.append("    fmt.Printf(\"–ò–Ω–¥–µ–∫—Å: %d, –ó–Ω–∞—á–µ–Ω–∏–µ: %d\\n\", index, value)\n");
        sb.append("}\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç:\n");
        sb.append("–ò–Ω–¥–µ–∫—Å: 0, –ó–Ω–∞—á–µ–Ω–∏–µ: 1\n");
        sb.append("–ò–Ω–¥–µ–∫—Å: 1, –ó–Ω–∞—á–µ–Ω–∏–µ: 2\n");
        sb.append("–ò–Ω–¥–µ–∫—Å: 2, –ó–Ω–∞—á–µ–Ω–∏–µ: 3\n");
        sb.append("–ò–Ω–¥–µ–∫—Å: 3, –ó–Ω–∞—á–µ–Ω–∏–µ: 4\n");
        sb.append("–ò–Ω–¥–µ–∫—Å: 4, –ó–Ω–∞—á–µ–Ω–∏–µ: 5\n\n");

        sb.append("–î–ª—è —Å—Ç—Ä–æ–∫:\n\n");

        sb.append("text := \"–ü—Ä–∏–≤–µ—Ç\"\n");
        sb.append("for i, ch := range text {\n");
        sb.append("    fmt.Printf(\"%d: %c\\n\", i, ch)\n");
        sb.append("}\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç:\n");
        sb.append("0: –ü\n");
        sb.append("1: —Ä\n");
        sb.append("2: –∏\n");
        sb.append("3: –≤\n");
        sb.append("4: –µ\n");
        sb.append("5: —Ç\n\n");

        // continue –∏ break
        sb.append("#### continue –∏ break\n");
        sb.append("continue ‚Äî –ø—Ä–æ–ø—É—Å–∫ –∏—Ç–µ—Ä–∞—Ü–∏–∏\n");
        sb.append("break ‚Äî –≤—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞\n\n");

        sb.append("for i := 0; i < 10; i++ {\n");
        sb.append("    if i == 5 {\n");
        sb.append("        continue\n");
        sb.append("    }\n");
        sb.append("    fmt.Print(i, \" \")\n");
        sb.append("}\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç:\n");
        sb.append("0 1 2 3 4 6 7 8 9\n\n");

        // –ú–µ—Ç–∫–∏ –∏ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã
        sb.append("#### –ú–µ—Ç–∫–∏ –∏ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã\n");
        sb.append("Go –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–ª–æ–∂–µ–Ω–Ω—ã–π `break`, –Ω–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–∫–∏:\n\n");

        sb.append("outerLoop:\n");
        sb.append("for i := 0; i < 3; i++ {\n");
        sb.append("    for j := 0; j < 3; j++ {\n");
        sb.append("        if i == 1 && j == 1 {\n");
        sb.append("            break outerLoop\n");
        sb.append("        }\n");
        sb.append("        fmt.Printf(\"(%d, %d) \", i, j)\n");
        sb.append("    }\n");
        sb.append("}\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç:\n");
        sb.append("(0, 0) (0, 1) (0, 2) (1, 0) (1, 1) \n\n");

        // –¶–∏–∫–ª –ø–æ —Å—Ç—Ä–æ–∫–µ
        sb.append("#### –¶–∏–∫–ª –ø–æ —Å—Ç—Ä–æ–∫–µ\n");
        sb.append("–ö–∞–∂–¥–∞—è –∏—Ç–µ—Ä–∞—Ü–∏—è –¥–∞—ë—Ç –∏–Ω–¥–µ–∫—Å –∏ rune (—Å–∏–º–≤–æ–ª):\n\n");

        sb.append("s := \"GoLang\"\n");
        sb.append("for i, c := range s {\n");
        sb.append("    fmt.Printf(\"%d -> %c\\n\", i, c)\n");
        sb.append("}\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç:\n");
        sb.append("0 -> G\n");
        sb.append("1 -> o\n");
        sb.append("2 -> L\n");
        sb.append("3 -> a\n");
        sb.append("4 -> n\n");
        sb.append("5 -> g\n\n");

        // –ü—Ä–∏–º–µ—Ä: —Å—É–º–º–∞ —á–∏—Å–µ–ª
        sb.append("#### –ü—Ä–∏–º–µ—Ä: –°—É–º–º–∞ —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ N\n\n");

        sb.append("func main() {\n");
        sb.append("    total := 0\n");
        sb.append("    for i := 1; i <= 10; i++ {\n");
        sb.append("        total += i\n");
        sb.append("    }\n");
        sb.append("    fmt.Println(\"–°—É–º–º–∞ –æ—Ç 1 –¥–æ 10:\", total)\n");
        sb.append("}\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç:\n");
        sb.append("–°—É–º–º–∞ –æ—Ç 1 –¥–æ 10: 55\n\n");

        // –ü—Ä–∏–º–µ—Ä: —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª
        sb.append("#### –ü—Ä–∏–º–µ—Ä: –§–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞\n\n");

        sb.append("n := 5\n");
        sb.append("result := 1\n");
        sb.append("for i := 1; i <= n; i++ {\n");
        sb.append("    result *= i\n");
        sb.append("}\n");
        sb.append("fmt.Println(\"–§–∞–∫—Ç–æ—Ä–∏–∞–ª 5:\", result)\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç:\n");
        sb.append("–§–∞–∫—Ç–æ—Ä–∏–∞–ª 5: 120\n\n");

        // –ì–æ—Ä—É—Ç–∏–Ω—ã + —Ü–∏–∫–ª—ã
        sb.append("#### –ì–æ—Ä—É—Ç–∏–Ω—ã –∏ —Ü–∏–∫–ª—ã\n");
        sb.append("–¶–∏–∫–ª—ã –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ —á–µ—Ä–µ–∑ –≥–æ—Ä—É—Ç–∏–Ω—ã:\n\n");

        sb.append("for i := 1; i <= 3; i++ {\n");
        sb.append("    go func(id int) {\n");
        sb.append("        fmt.Println(\"–ì–æ—Ä—É—Ç–∏–Ω–∞\", id)\n");
        sb.append("    }(i)\n");
        sb.append("}\n");
        sb.append("time.Sleep(time.Second * 1)\n\n");

        sb.append("–†–µ–∑—É–ª—å—Ç–∞—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–º:\n");
        sb.append("–ì–æ—Ä—É—Ç–∏–Ω–∞ 1\n");
        sb.append("–ì–æ—Ä—É—Ç–∏–Ω–∞ 3\n");
        sb.append("–ì–æ—Ä—É—Ç–∏–Ω–∞ 2\n\n");

        // –°–æ–≤–µ—Ç—ã
        sb.append("### –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã\n");
        sb.append("- –ù–µ –∑–∞–±—ã–≤–∞–π –ø—Ä–æ `time.Sleep()` –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –≥–æ—Ä—É—Ç–∏–Ω\n");
        sb.append("- –ò–∑–±–µ–≥–∞–π—Ç–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö —Ü–∏–∫–ª–æ–≤ –±–µ–∑ `break`\n");
        sb.append("- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `range` –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–∞—Å—Å–∏–≤–∞–º–∏ –∏ —Å—Ç—Ä–æ–∫–∞–º–∏\n");
        sb.append("- –õ—É—á—à–µ –≤—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Å—Ç—ã–µ `for` –≤–º–µ—Å—Ç–æ —Å–ª–æ–∂–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π\n\n");


        return sb.toString();
    }

}